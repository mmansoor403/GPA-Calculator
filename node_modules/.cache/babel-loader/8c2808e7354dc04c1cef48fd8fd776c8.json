{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmans\\\\Desktop\\\\React-projs\\\\Gpa React\\\\src\\\\components\\\\Users\\\\AddData.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = props => {\n  let fruits = [{\n    label: \"Apple\",\n    value: \"🍎\"\n  }, {\n    label: \"Banana\",\n    value: \"🍌\"\n  }, {\n    label: \"Orange\",\n    value: \"🍊\"\n  }]; // const [cities, setCities] = useState([]);\n  // const [selectedCounty, setSelectedCountry] = useState(\"\");\n  // const [selectedCity, setSelectedCity] = useState(\"\");\n  // const countries = {\n  //     France: [\"Paris\", \"Marseille\", \"Lille\", \"Lyon\"],\n  //     Usa: [\"New York\", \"San Francisco\", \"Austin\", \"Dallas\"],\n  //     Brazil: [\"São Paulo\", \"Rio de Janeiro\", \"Salvador\"]\n  //   };\n  //   const countryList = Object.keys(countries).map(key => ({\n  //     name: key\n  //   }));\n  //   function handleCountrySelect(e) {\n  //     console.log(\"Selected country\", e.target.value);\n  //     const countrySel = e.target.value;\n  //     const citiesSel = countrySel !== \"\" ? countries[countrySel] : \"\";\n  //     setSelectedCountry(countrySel);\n  //     setCities(citiesSel);\n  //     setSelectedCity(\"\");\n  //   }\n  //   function handleCitySelect(e) {\n  //     console.log(\"Selected city\", e.target.value);\n  //     const citiesSel = e.target.value;\n  //     setSelectedCity(citiesSel);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"subname\",\n      children: \"Subject Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"subname\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmoFor: \"grade\",\n      children: \"Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmoFor: \"credit\",\n      children: \"Credit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Cities\",\n      onChange: e => handleCitySelect(e),\n      value: selectedCity,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select the city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), cities.map((city, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["C:/Users/mmans/Desktop/React-projs/Gpa React/src/components/Users/AddData.js"],"names":["React","useState","AddData","props","fruits","label","value","e","handleCitySelect","selectedCity","cities","map","city","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAIA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAErB,MAAIC,MAAM,GAAG,CACT;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADS,EAET;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFS,EAGT;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHS,CAAb,CAFqB,CAQrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEF,sBACE;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAoBI;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAEC,CAAC,IAAIC,gBAAgB,CAACD,CAAD,CAFjC;AAGE,MAAA,KAAK,EAAEE,YAHT;AAAA,8BAKE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGC,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,kBACV;AAAkB,QAAA,KAAK,EAAED,IAAzB;AAAA,kBACGA;AADH,SAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,cADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAzED;;KAAMX,O;AA2EN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\n\r\nconst AddData = props => {\r\n\r\n    let fruits = [\r\n        { label: \"Apple\", value: \"🍎\" },\r\n        { label: \"Banana\", value: \"🍌\" },\r\n        { label: \"Orange\", value: \"🍊\" }\r\n    ]\r\n\r\n    // const [cities, setCities] = useState([]);\r\n    // const [selectedCounty, setSelectedCountry] = useState(\"\");\r\n    // const [selectedCity, setSelectedCity] = useState(\"\");\r\n\r\n    // const countries = {\r\n    //     France: [\"Paris\", \"Marseille\", \"Lille\", \"Lyon\"],\r\n    //     Usa: [\"New York\", \"San Francisco\", \"Austin\", \"Dallas\"],\r\n    //     Brazil: [\"São Paulo\", \"Rio de Janeiro\", \"Salvador\"]\r\n    //   };\r\n\r\n    //   const countryList = Object.keys(countries).map(key => ({\r\n    //     name: key\r\n    //   }));\r\n\r\n    //   function handleCountrySelect(e) {\r\n    //     console.log(\"Selected country\", e.target.value);\r\n    //     const countrySel = e.target.value;\r\n    //     const citiesSel = countrySel !== \"\" ? countries[countrySel] : \"\";\r\n    //     setSelectedCountry(countrySel);\r\n    //     setCities(citiesSel);\r\n    //     setSelectedCity(\"\");\r\n    //   }\r\n    \r\n    //   function handleCitySelect(e) {\r\n    //     console.log(\"Selected city\", e.target.value);\r\n    //     const citiesSel = e.target.value;\r\n    //     setSelectedCity(citiesSel);\r\n    //   }\r\n\r\n  return (\r\n    <form>\r\n        <label htmlFor=\"subname\">Subject Name</label>\r\n        <input id=\"subname\" type=\"text\" />\r\n\r\n        <label htmoFor=\"grade\">Grade</label>\r\n        {/* <select\r\n          name=\"Countries\"\r\n          onChange={e => handleCountrySelect(e)}\r\n          value={selectedCounty}\r\n        >\r\n          <option value=\"\">Select the country</option>\r\n          {countryList.map((country, key) => (\r\n            <option key={key} value={country.name}>\r\n              {country.name}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n\r\n        \r\n        \r\n        <label htmoFor=\"credit\">Credit</label>\r\n        <select\r\n          name=\"Cities\"\r\n          onChange={e => handleCitySelect(e)}\r\n          value={selectedCity}\r\n        >\r\n          <option value=\"\">Select the city</option>\r\n          {cities.map((city, key) => (\r\n            <option key={key} value={city}>\r\n              {city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddData;"]},"metadata":{},"sourceType":"module"}