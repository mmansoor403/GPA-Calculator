{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmans\\\\Desktop\\\\React-projs\\\\Gpa React\\\\src\\\\components\\\\Users\\\\AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './AddData.module.css';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = props => {\n  _s();\n\n  const grades = [{\n    label: \"O\",\n    value: 10\n  }, {\n    label: \"A+\",\n    value: 9\n  }, {\n    label: \"A\",\n    value: 8\n  }, {\n    label: \"B+\",\n    value: 7\n  }, {\n    label: \"B\",\n    value: 6\n  }, {\n    label: \"RA\",\n    value: 0\n  }];\n  const credits = [{\n    label: \"10\",\n    value: 10\n  }, {\n    label: \"4\",\n    value: 4\n  }, {\n    label: \"3\",\n    value: 3\n  }, {\n    label: \"2\",\n    value: 2\n  }, {\n    label: \"0\",\n    value: 0\n  }];\n  const [subjectName, setSubjectName] = useState(\"\");\n  const [gradeName, setGradeName] = useState(\"\");\n  const [gradeValue, setGradeValue] = useState(\"\");\n  const [credit, setCredit] = useState(\"\");\n  const [totalCredit, setTotalCredit] = useState(0);\n  const [multipliedValue, setMultipliedValue] = useState(0);\n  const [multipliedTotalValue, setMultipliedTotalValue] = useState(0);\n  const [gpa, setGpa] = useState(multipliedTotalValue / totalCredit);\n\n  const gradeChangeHandler = event => {\n    setGradeName(event.target.options[event.target.selectedIndex].text);\n    setGradeValue(+event.target.value);\n    setMultipliedValue(+event.target.value * credit);\n  };\n\n  const creditChangeHandler = event => {\n    setCredit(+event.target.value);\n    setTotalCredit(+totalCredit + parseInt(event.target.value, 10));\n    setMultipliedValue(gradeValue * event.target.value);\n    setMultipliedTotalValue(+multipliedTotalValue + parseInt(gradeValue * event.target.value), 10);\n  };\n\n  const subjectNameHandler = event => {\n    setSubjectName(event.target.value);\n  };\n\n  const addDataHandler = event => {\n    event.preventDefault();\n\n    if (subjectName.trim().length === 0 || gradeName.trim().length === 0 || gradeValue.trim().length === 0 || credit.trim().length === 0) {\n      return;\n    }\n\n    setGpa((multipliedTotalValue / totalCredit).toFixed(2));\n    console.log(subjectName, gradeName, gradeValue, credit);\n    console.log(\"Total Credit: \", totalCredit);\n    console.log(\"Multiplied Value: \", multipliedValue);\n    console.log(\"Multiplied Total Value: \", multipliedTotalValue);\n    setSubjectName(\"\");\n    setGradeName(\"\");\n    setGradeValue(\"\");\n    setCredit(\"\");\n  };\n\n  const calculateGpa = () => {\n    console.log(\"GPA: \", gpa);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addDataHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subname\",\n        children: \"Subject Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"subname\",\n        value: subjectName,\n        type: \"text\",\n        onChange: subjectNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"grade\",\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"grade\",\n        value: gradeValue,\n        onChange: gradeChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"select Grade\",\n          children: \"  Select Grade  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), grades.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n          name: grade.label,\n          value: grade.value,\n          children: grade.label\n        }, grade.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"credit\",\n        children: \"Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"credit\",\n        value: credit,\n        onChange: creditChangeHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select Credit\",\n          children: \"  Select Credit  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), credits.map(credit => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: credit.value,\n          children: credit.label\n        }, credit.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: calculateGpa,\n        children: \"Get GPA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"V3Or1nbIlsTFsRNMjVhwOxzRWi8=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["C:/Users/mmans/Desktop/React-projs/Gpa React/src/components/Users/AddData.js"],"names":["React","useState","classes","Card","Button","AddData","props","grades","label","value","credits","subjectName","setSubjectName","gradeName","setGradeName","gradeValue","setGradeValue","credit","setCredit","totalCredit","setTotalCredit","multipliedValue","setMultipliedValue","multipliedTotalValue","setMultipliedTotalValue","gpa","setGpa","gradeChangeHandler","event","target","options","selectedIndex","text","creditChangeHandler","parseInt","subjectNameHandler","addDataHandler","preventDefault","trim","length","toFixed","console","log","calculateGpa","input","map","grade"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport classes from  './AddData.module.css'\r\nimport Card from '../UI/Card';\r\nimport Button from '../UI/Button';\r\n\r\n\r\n\r\nconst AddData = props => {\r\n\r\n    const grades = [\r\n        { label: \"O\", value: 10 },\r\n        { label: \"A+\", value: 9 },\r\n        { label: \"A\", value: 8 },\r\n        { label: \"B+\", value: 7 },\r\n        { label: \"B\", value: 6 },\r\n        { label: \"RA\", value: 0}\r\n    ];\r\n\r\n    const credits = [\r\n        { label: \"10\", value: 10 },\r\n        { label: \"4\", value: 4 },\r\n        { label: \"3\", value: 3 },\r\n        { label: \"2\", value: 2 },\r\n        { label: \"0\", value: 0 }\r\n    ]\r\n\r\n\r\n    const [subjectName, setSubjectName] = useState(\"\");\r\n    const [gradeName, setGradeName] = useState(\"\");\r\n    const [gradeValue, setGradeValue] = useState(\"\");\r\n    const [credit, setCredit] = useState(\"\");\r\n    const [totalCredit, setTotalCredit] = useState(0);\r\n    const [multipliedValue, setMultipliedValue] = useState(0);\r\n    const [multipliedTotalValue, setMultipliedTotalValue] = useState(0);\r\n    const [gpa, setGpa] = useState(multipliedTotalValue/totalCredit);\r\n    \r\n\r\n    const gradeChangeHandler = (event) => {\r\n        setGradeName(event.target.options[event.target.selectedIndex].text);\r\n        setGradeValue(+event.target.value);\r\n        setMultipliedValue(+event.target.value * credit);\r\n      };\r\n\r\n    const creditChangeHandler = (event) => {\r\n        setCredit(+event.target.value);\r\n        setTotalCredit(+totalCredit+parseInt(event.target.value,10));\r\n        setMultipliedValue(gradeValue * event.target.value);\r\n        setMultipliedTotalValue(+multipliedTotalValue+parseInt(gradeValue * event.target.value),10);\r\n        \r\n    };\r\n\r\n      const subjectNameHandler = (event) => {\r\n          setSubjectName(event.target.value);\r\n      };\r\n\r\n      \r\n\r\n      \r\n    \r\n\r\n      const addDataHandler = (event) => {\r\n            event.preventDefault(); \r\n\r\n            if(\r\n                subjectName.trim().length === 0 || \r\n                gradeName.trim().length === 0 || \r\n                gradeValue.trim().length === 0 || \r\n                    credit.trim().length === 0) {\r\n                return ;\r\n            }\r\n\r\n            setGpa((multipliedTotalValue/totalCredit).toFixed(2));\r\n            \r\n            console.log(subjectName, gradeName, gradeValue, credit);\r\n           \r\n            console.log(\"Total Credit: \" ,totalCredit);\r\n\r\n            console.log(\"Multiplied Value: \", multipliedValue);\r\n\r\n            console.log(\"Multiplied Total Value: \", multipliedTotalValue);\r\n            \r\n            setSubjectName(\"\");\r\n            setGradeName(\"\");\r\n            setGradeValue(\"\");\r\n            setCredit(\"\");\r\n      };\r\n\r\n      const calculateGpa = () => {\r\n        \r\n        console.log(\"GPA: \",gpa);\r\n       \r\n      }\r\n\r\n    \r\n\r\n    \r\n\r\n  return (\r\n    <Card className={classes.input}>\r\n    <form onSubmit={addDataHandler}>\r\n        <label htmlFor=\"subname\">Subject Name</label>\r\n        <input id=\"subname\" value={subjectName} type=\"text\" onChange={subjectNameHandler}/>\r\n\r\n        <label htmlFor=\"grade\">Grade</label>\r\n        <select id=\"grade\" value={gradeValue} onChange={gradeChangeHandler}> \r\n      <option value=\"select Grade\">  Select Grade  </option>\r\n            \r\n         {grades.map((grade) => <option key={grade.label} name={grade.label} value={grade.value}>{grade.label}</option>)}\r\n    </select>\r\n\r\n    <label htmlFor=\"credit\">Credit</label>\r\n        <select id=\"credit\" value={credit} onChange={creditChangeHandler}> \r\n      <option value=\"Select Credit\">  Select Credit  </option>\r\n            \r\n         {credits.map((credit) => <option key={credit.label} value={credit.value}>{credit.label}</option>)}\r\n    </select>\r\n        \r\n    <Button type=\"submit\">Add Data</Button> \r\n    <Button onClick={calculateGpa}>Get GPA</Button>\r\n        \r\n        \r\n    </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddData;"]},"metadata":{},"sourceType":"module"}