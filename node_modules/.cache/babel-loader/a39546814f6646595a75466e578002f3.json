{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmans\\\\Desktop\\\\React-projs\\\\Gpa React\\\\src\\\\components\\\\Users\\\\AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = props => {\n  _s();\n\n  let grades = [{\n    label: \"O\",\n    value: 10\n  }, {\n    label: \"A+\",\n    value: 9\n  }, {\n    label: \"A\",\n    value: \"8\"\n  }, {\n    label: \"B+\",\n    value: \"7\"\n  }, {\n    label: \"B\",\n    value: \"6\"\n  }];\n  let [grade, setGrade] = useState(\"Select Grade\");\n\n  let handleGradeChange = e => {\n    setGrade(e.target.value);\n    console.log(e.target.value);\n  }; // const [cities, setCities] = useState([]);\n  // const [selectedCounty, setSelectedCountry] = useState(\"\");\n  // const [selectedCity, setSelectedCity] = useState(\"\");\n  // const countries = {\n  //     France: [\"Paris\", \"Marseille\", \"Lille\", \"Lyon\"],\n  //     Usa: [\"New York\", \"San Francisco\", \"Austin\", \"Dallas\"],\n  //     Brazil: [\"São Paulo\", \"Rio de Janeiro\", \"Salvador\"]\n  //   };\n  //   const countryList = Object.keys(countries).map(key => ({\n  //     name: key\n  //   }));\n  //   function handleCountrySelect(e) {\n  //     console.log(\"Selected country\", e.target.value);\n  //     const countrySel = e.target.value;\n  //     const citiesSel = countrySel !== \"\" ? countries[countrySel] : \"\";\n  //     setSelectedCountry(countrySel);\n  //     setCities(citiesSel);\n  //     setSelectedCity(\"\");\n  //   }\n  //   function handleCitySelect(e) {\n  //     console.log(\"Selected city\", e.target.value);\n  //     const citiesSel = e.target.value;\n  //     setSelectedCity(citiesSel);\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"subname\",\n      children: \"Subject Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"subname\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"grade\",\n      children: \"Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"grade\",\n      onChange: handleGradeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Select a fruit\",\n        children: \" -- Select Grade -- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), grades.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: grade.value,\n        children: grade.label\n      }, grade.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"U/jC26HJPqM59rZjpus9rf3UAYA=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["C:/Users/mmans/Desktop/React-projs/Gpa React/src/components/Users/AddData.js"],"names":["React","useState","AddData","props","grades","label","value","grade","setGrade","handleGradeChange","e","target","console","log","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAIA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AAErB,MAAIC,MAAM,GAAG,CACT;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADS,EAET;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAFS,EAGT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAHS,EAIT;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAJS,EAKT;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALS,CAAb;AAQA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,cAAD,CAAhC;;AAEA,MAAIQ,iBAAiB,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASL,KAArB;AACD,GAHH,CAZqB,CAiBrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEF,sBACE;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,QAAQ,EAAEG,iBAA7B;AAAA,8BACF;AAAQ,QAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,EAKEL,MAAM,CAACU,GAAP,CAAYP,KAAD,iBAAW;AAA0B,QAAA,KAAK,EAAEA,KAAK,CAACD,KAAvC;AAAA,kBAA+CC,KAAK,CAACF;AAArD,SAAaE,KAAK,CAACF,KAAnB;AAAA;AAAA;AAAA;AAAA,cAAtB,CALF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAzFD;;GAAMH,O;;KAAAA,O;AA2FN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\n\r\nconst AddData = props => {\r\n\r\n    let grades = [\r\n        { label: \"O\", value: 10 },\r\n        { label: \"A+\", value: 9 },\r\n        { label: \"A\", value: \"8\" },\r\n        { label: \"B+\", value: \"7\" },\r\n        { label: \"B\", value: \"6\" }\r\n    ]\r\n\r\n    let [grade, setGrade] = useState(\"Select Grade\");\r\n\r\n    let handleGradeChange = (e) => {\r\n        setGrade(e.target.value);\r\n        console.log(e.target.value);\r\n      }\r\n\r\n    // const [cities, setCities] = useState([]);\r\n    // const [selectedCounty, setSelectedCountry] = useState(\"\");\r\n    // const [selectedCity, setSelectedCity] = useState(\"\");\r\n\r\n    // const countries = {\r\n    //     France: [\"Paris\", \"Marseille\", \"Lille\", \"Lyon\"],\r\n    //     Usa: [\"New York\", \"San Francisco\", \"Austin\", \"Dallas\"],\r\n    //     Brazil: [\"São Paulo\", \"Rio de Janeiro\", \"Salvador\"]\r\n    //   };\r\n\r\n    //   const countryList = Object.keys(countries).map(key => ({\r\n    //     name: key\r\n    //   }));\r\n\r\n    //   function handleCountrySelect(e) {\r\n    //     console.log(\"Selected country\", e.target.value);\r\n    //     const countrySel = e.target.value;\r\n    //     const citiesSel = countrySel !== \"\" ? countries[countrySel] : \"\";\r\n    //     setSelectedCountry(countrySel);\r\n    //     setCities(citiesSel);\r\n    //     setSelectedCity(\"\");\r\n    //   }\r\n    \r\n    //   function handleCitySelect(e) {\r\n    //     console.log(\"Selected city\", e.target.value);\r\n    //     const citiesSel = e.target.value;\r\n    //     setSelectedCity(citiesSel);\r\n    //   }\r\n\r\n  return (\r\n    <form>\r\n        <label htmlFor=\"subname\">Subject Name</label>\r\n        <input id=\"subname\" type=\"text\" />\r\n\r\n        <label htmlFor=\"grade\">Grade</label>\r\n        <select id=\"grade\" onChange={handleGradeChange}> \r\n      <option value=\"Select a fruit\"> -- Select Grade -- </option>\r\n            {/* Mapping through each fruit object in our fruits array\r\n          and returning an option element with the appropriate attributes / values.\r\n         */}\r\n         {grades.map((grade) => <option key={grade.label} value={grade.value}>{grade.label}</option>)}\r\n    </select>\r\n        {/* <select\r\n          name=\"Countries\"\r\n          onChange={e => handleCountrySelect(e)}\r\n          value={selectedCounty}\r\n        >\r\n          <option value=\"\">Select the country</option>\r\n          {countryList.map((country, key) => (\r\n            <option key={key} value={country.name}>\r\n              {country.name}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n\r\n        \r\n        \r\n        {/* <label htmoFor=\"credit\">Credit</label>\r\n        <select\r\n          name=\"Cities\"\r\n          onChange={e => handleCitySelect(e)}\r\n          value={selectedCity}\r\n        >\r\n          <option value=\"\">Select the city</option>\r\n          {cities.map((city, key) => (\r\n            <option key={key} value={city}>\r\n              {city}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddData;"]},"metadata":{},"sourceType":"module"}